swagger: "2.0"
info:
  description: "This is the Aspire Mini API"
  version: "1.0.0"
  title: "Aspire mini api"
  contact:
    email: "avinragh@gmail.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost:8080"
basePath: "/v1"
tags:
- name: "user"
  description: "All about user management"
- name: "loan"
  description: "Everything to do with Loans"
- name: "installment"
  description: "Everything to do with Installments"
schemes:
- "http"
paths:
  /Signup:
    post:
      tags:
      - "user"
      summary: "Signup a user"
      description: "Signup a user with the credentials"
      operationId: "signup"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "user"
        in: "body"
        description: "The user to create"
        schema:
          type: object
          required:
          - email
          - password
          - role
          properties:
            email:
              type: string
            password:
              type: string
            username:
              type: string
            role:
              type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/User'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        409:
          description: Conflict. User with given email already exists
          schema:
            $ref: '#/definitions/ErrorResponse'

        500:
          description: Internal Server Error 
          schema:
            $ref: '#/definitions/ErrorResponse'
 
  
  /Login:
    post:
      tags:
      - "user"
      summary: "Login a user"
      description: ""
      operationId: "login"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "authentication"
        description: "auth details"
        required: true
        schema:
          $ref: '#/definitions/Authentication'
      
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Token'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: Internal Server Error 
          schema:
            $ref: '#/definitions/ErrorResponse'

        
  /Loans/{id}:
    get:
      tags:
      - "loan"
      summary: "Get Loan by ID"
      description: ""
      operationId: "getLoanById"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "Token"
        type: string
        required: true
      - in: "path"
        name: "id"
        type: integer
        required: true
      responses:
        200:
          description: OK
          schema: 
            $ref: '#/definitions/Loan'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        403:
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'        
        500:
          description: Internal Server Error 
          schema:
            $ref: '#/definitions/ErrorResponse'

    delete:
      tags:
      - "loan"
      summary: "Delete Loan by ID"
      description: ""
      operationId: "deleteLoanById"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "Token"
        type: string
        required: true
      - in: "path"
        name: "id"
        type: integer
        required: true

      responses:
        204:
          description: No Content
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        403:
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: Internal Server Error 
          schema:
            $ref: '#/definitions/ErrorResponse'
     
            
  /Loans:
    get:
      tags:
      - "loan"
      summary: "Get Loans"
      description: ""
      operationId: "getLoans"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "Token"
        type: string
        required: true
      - in: "query"
        name: "userId"
        type: integer
        required: false
      - in: "query"
        name: "state"
        type: string
        required: false
      - in: "query"
        name: "sort"
        type: string
        required: false
      - in: "query"
        name: "limit"
        type: integer
        required: false
      - in: "query"
        name: "page"
        type: integer
        required: false
      
      responses:
        200:
          description: OK
          schema: 
            type: array
            items:
              $ref: '#/definitions/Loan'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        403:
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: Internal Server Error 
          schema:
            $ref: '#/definitions/ErrorResponse'
      
    post:
      tags:
      - "loan"
      summary: "Add a new loan"
      description: ""
      operationId: "addLoan"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "Token"
        type: string
        required: true
      - in: "body"
        name: "loan"
        description: "Loan Object that needs to be added"
        required: true
        schema:
          type: object
          properties:
            amount:
              type: number
              format: double
            term:
              type: integer
              format: int
            
      responses:
        200:
          description: OK
          schema: 
            type: array
            items:
              $ref: '#/definitions/Loan'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        403:
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: Internal Server Error 
          schema:
            $ref: '#/definitions/ErrorResponse'
  

  
  /Loans/{id}/Approve:  
    patch:
      tags:
      - "loan"
      summary: "Approve Loan"
      description: ""
      operationId: "approveLoan"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "Token"
        type: string
        required: true      
      - in: "path"
        name: "id"
        type: integer  
        required: true

      responses:
        200:
          description: OK
          schema: 
            $ref: '#/definitions/Loan'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        403:
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: Internal Server Error 
          schema:
            $ref: '#/definitions/ErrorResponse'
            
  /Installments/{id}:
    get:
      tags:
      - "installment"
      summary: "Get Installment by ID"
      description: ""
      operationId: "getInstallmentById"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "Token"
        type: string
        required: true
      - in: "path"
        name: "id"
        type: integer
        required: true
      
      responses:
        200:
          description: OK
          schema: 
            $ref: '#/definitions/Installment'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        403:
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'        
        500:
          description: Internal Server Error 
          schema:
            $ref: '#/definitions/ErrorResponse'
            
    delete:
      tags:
      - "installment"
      summary: "Delete Installment by ID"
      description: ""
      operationId: "deleteInstallmentById"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "Token"
        type: string
        required: true
      - in: "path"
        name: "id"
        type: integer
        required: true

      responses:
        204:
          description: No Content
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        403:
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: Internal Server Error 
          schema:
            $ref: '#/definitions/ErrorResponse'

  /Installments:
    get:
      tags:
      - "installment"
      summary: "Get Installments"
      description: ""
      operationId: "getInstallments"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "Token"
        type: string
        required: true
      - in: "query"
        name: "loanId"
        type: integer
        required: false
      - in: "query"
        name: "state"
        type: string
        required: false
      - in: "query"
        name: "sort"
        type: string
        required: false
      - in: "query"
        name: "limit"
        type: integer
        required: false
      - in: "query"
        name: "page"
        type: integer
        required: false      
    
      responses:
        200:
          description: OK
          schema: 
            type: array
            items:
              $ref: '#/definitions/Installment'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        403:
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: Internal Server Error 
          schema:
            $ref: '#/definitions/ErrorResponse'


  /Installments/{id}/Repay:
    patch:
      tags:
      - "installment"
      summary: "Repay Installment"
      description: ""
      operationId: "repayInstallment"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "Token"
        type: string
        required: true      
      - in: "path"
        name: "id"
        type: integer  
        required: true
      - in: "body"
        name: "repaymentRequest"
        schema:
          $ref: '#/definitions/RepaymentRequest'
        required: true

      responses:
        200:
          description: OK
          schema: 
            $ref: '#/definitions/Installment'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        403:
          description: Forbidden
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        500:
          description: Internal Server Error 
          schema:
            $ref: '#/definitions/ErrorResponse'

                
          
definitions:
  Loan:
    type: object
    required:
      - amount
      - term
    properties:
      id:
        type: integer
        format: int64
        x-omitempty: false        
      amount: 
        type: number
        format: double
      term:
        type: integer
        format: int
      currency:
        type: string
        x-omitempty: false       
      state:
        type: string
        x-omitempty: false
      createdOn:
        type: string
        format: date-time
        x-go-custom-tag: sql:"created_on"
        x-omitempty: false
      modifiedOn:
        type: string
        format: date-time
        x-go-custom-tag: sql:"modified_on"
        x-omitempty: false
      startDate:
        type: string
        format: date-time
        x-go-custom-tag: sql:"start_date"
        x-omitempty: false
      userId:
        type: integer
        format: int64
        x-go-custom-tag: sql:"user_id"
        x-omitempty: false
      installmentsCreated:
        type: boolean
        default: false
        x-go-custom-tag: sql:"installments_created"
        x-omitempty: false


  Installment:
    type: object
    required:
      - installmentAmount
      - dueDate
    properties:
      id:
        type: integer
        format: int64
        x-omitempty: false
      installmentAmount:
        type: number
        format: double
        minimum: 1
      repaymentAmount:
        type: number
        format: double
        minimum: 0
        default: 0
        x-omitempty: false
      dueDate:
        type: string
        format: date-time
      state:
        type: string
        x-omitempty: false
      createdOn:
        type: string
        format: date-time
        x-go-custom-tag: sql:"created_on"
        x-omitempty: false
      modifiedOn:
        type: string
        format: date-time
        x-go-custom-tag: sql:"modified_on"
        x-omitempty: false
      loanId:
        type: integer
        format: int64
        x-omitempty: false
      repaymentTime:
        type: string
        format: date-time
        x-go-custom-tag: sql:repayment_time"
        x-omitempty: false

  User:
    type: object
    required:
      - email
      - password
      - role
    properties:
      id:
        type: integer
        format: int64
        x-omitempty: false
      username:
        type: string
        x-omitempty: false
      email:
        type: string
      role:
        type: string
      createdOn:
        type: string
        format: date-time
        x-go-custom-tag: sql:"created_on"
        x-omitempty: false
      modifiedOn:
        type: string
        format: date-time
        x-go-custom-tag: sql:"modified_on"
        x-omitempty: false
      password:
        type: string
  
  Authentication:
    type: object
    required:
      - email
      - password
    properties:
      email:
        type: string
      password:
        type: string

  Token:
    type: object
    required: 
      - email
      - tokenString
    properties:
      email: 
        type: string
      role:
        type: string
        x-omitempty: false        
      tokenString:
        type: string


  RepaymentRequest:
    type: object
    required:
      - repaymentAmount
    properties:
      repaymentAmount:
        type: number
        format: double


  ErrorResponse:
    type: object
    properties:
      code:
        type: string
        x-omitempty: false
      message:
        type: string
        x-omitempty: false
      detail:
        type: string
        x-omitempty: false



  




